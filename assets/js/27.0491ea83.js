(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{307:function(t,n,s){"use strict";s.r(n);var a=s(14),r=Object(a.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"抽象的springutil"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#抽象的springutil"}},[t._v("#")]),t._v(" 抽象的SpringUtil")]),t._v(" "),n("h2",{attrs:{id:"难理解之hutool-springutil注入失败"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#难理解之hutool-springutil注入失败"}},[t._v("#")]),t._v(" 难理解之Hutool-SpringUtil注入失败")]),t._v(" "),n("p",[t._v("在项目中直接调用Hutool包里的SpringUtil，使用@Resource方式注入Bean，调用时抛"),n("strong",[t._v("SpringUtil空指针异常")]),t._v("。然后笔者把Hutool-SpringUtil的代码原封不动的复制出来新建一个文件保存，嘿您猜怎么着？注入成功了！太抽象了")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("猜测原因：SpringBoot项目没扫描到Hutool包下的Bean。但是当时忘记验证了，只好作罢。")])])]),t._v(" "),n("h2",{attrs:{id:"难理解之springutil调用空指针"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#难理解之springutil调用空指针"}},[t._v("#")]),t._v(" 难理解之SpringUtil调用空指针")]),t._v(" "),n("p",[t._v("SpringUtil implements ApplicationContextAware 比 @PostConstruct 后初始化，导致@PostConstruct的初始化时调用SpringUtil报空指针异常。")]),t._v(" "),n("ul",[n("li",[t._v("嘿您猜怎么着！上一章节刚解决的问题，过了一天他就出现本章的调用"),n("strong",[t._v("SpringUtil.getBean()中的applicationContext空指针异常")]),t._v("，前一天还好，隔天报错！一开电脑就错，十分抽象")]),t._v(" "),n("li",[t._v("猜测原因：@PostConstruct 比 ApplicationContextAware 先执行。")]),t._v(" "),n("li",[n("ol",[n("li",[t._v("采用解决方法：@DependsOn ，让@PostConstruct方法/类依赖于SpringUtil，您猜怎么着？嘿！不行，还是报错。十分抽象")])])]),t._v(" "),n("li",[n("ol",{attrs:{start:"2"}},[n("li",[t._v("采用解决方法：@Order 让SpringUtil先初始化一步。嘿！您猜怎么着？还是不行，依然报错，十分抽象。")])])]),t._v(" "),n("li",[n("ol",{attrs:{start:"3"}},[n("li",[t._v("采用解决方法：@Resource 把SpringUtil先行注入进包含@PostConstruct的类中。嘿！您猜怎么着！这次行了，太抽象了。")])])]),t._v(" "),n("li",[t._v("TODO： 各种百度和问AI没得出原因，知识不够暂且作罢，改日拿我的大知识狠狠地蹂躏小小Spring")]),t._v(" "),n("li",[t._v("更新：静态方法不依赖于类所以你用@PostConstruct这个方法他并没有去加载这个bean，application context自然为空用@resource方式会强制加载所以没问题")]),t._v(" "),n("li",[t._v("更新：（"),n("strong",[t._v("无效")]),t._v("）有人建议 放弃使用 @PostConstruct 转而使用 InitializingBean(目的是将初始化方法后置), 还是报applicationContext空指针异常 "),n("strong",[t._v("(经查资料与验证，@PostConstruct方法是比实现 InitializingBean先执行的)")]),n("br"),t._v(" "),n("img",{attrs:{src:"/cannot-understand/spring-init-02.png",alt:"pic"}})]),t._v(" "),n("li",[t._v("更新： 经过一个早上的研究，最终得出方法1 失败的原因：@DependsOn注解通常应该放在Spring管理的Bean上，因为它是用来指定Bean之间的依赖关系的。在实际使用中，通常将@DependsOn注解放在需要依赖其他Bean初始化的Bean上，以确保在初始化当前Bean之前先初始化所依赖的Bean。如果@DependsOn注解放在一个未被Spring管理的类上，它可能会被忽略，因为Spring只会处理被管理的Bean上的注解。"),n("strong",[t._v("所以在方法1的基础上，将该类注册为Bean即可解决该问题。甚至说不要方法1的@DependsOn都可以")])])]),t._v(" "),n("h3",{attrs:{id:"spring的初始化顺序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#spring的初始化顺序"}},[t._v("#")]),t._v(" Spring的初始化顺序")]),t._v(" "),n("p",[n("img",{attrs:{src:"/cannot-understand/spring-init-01.png",alt:"pic"}})]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Component")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyInitializingBean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InitializingBean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyInitializingBean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是MyInitializingBean构造方法执行..."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//最先执行")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("afterPropertiesSet")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是afterPropertiesSet方法执行..."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第三执行")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PostConstruct")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("postConstruct")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是postConstruct方法执行..."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第二执行")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是init方法执行..."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//最后执行")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initMethod "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"init"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyInitializingBean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyInitializingBean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br")])]),n("ul",[n("li",[t._v("另一解决方法: "),n("a",{attrs:{href:"http://s.xiaoyuan.space/2EW9Hz",target:"_blank",rel:"noopener noreferrer"}},[t._v("BeanFactoryPostProcessor详解"),n("OutboundLink")],1)])]),t._v(" "),n("h3",{attrs:{id:"扩展小知识"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#扩展小知识"}},[t._v("#")]),t._v(" 扩展小知识")]),t._v(" "),n("p",[n("strong",[t._v("1. ApplicationContextAware 需要注册为Spring的Bean才会被处理，在没有被注册为Bean的情况下，Spring也不会自动地将ApplicationContext传递给该类。")])]),t._v(" "),n("h3",{attrs:{id:"问题总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#问题总结"}},[t._v("#")]),t._v(" 问题总结")]),t._v(" "),n("ol",[n("li",[t._v("@SpringUtil需要注册为Bean，实现的ApplicationContextAware setApplication方法才会被执行(Hutool已注册为bean)")]),t._v(" "),n("li",[t._v("使用了SpringUtil的类也要被Spring管理才行。总之，确保 StateConfig 类由 Spring 容器管理是为了避免由于 Bean 的初始化过程不受 Spring 容器控制而导致 @PostConstruct 方法无法被正确调用的问题。")])]),t._v(" "),n("ul",[n("li",[t._v("如果类不由 Spring 容器管理，那么它的初始化过程不受 Spring 容器控制，也就无法保证 @PostConstruct 方法被正确调用。而类的 init() 方法又依赖于 Spring 容器的上下文（通过调用 SpringUtils 获取 Bean），因此必须确保 StateConfig 类也被 Spring 容器管理，才能保证 init() 方法的正确执行。")])]),t._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[t._v("别人建议：少点使用@PostConstruct，改用InitializingBean")])])])}),[],!1,null,null,null);n.default=r.exports}}]);